//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

/*
GlobalConfig.cs
Create By Ben
*/

using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;

namespace cfg.global
{ 

public sealed partial class GlobalConfig :  Bright.Config.BeanBase 
{
    public GlobalConfig(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  Id = _json["id"]; }
        { var __json0 = _json["Language"]; if(!__json0.IsArray) { throw new SerializationException(); } Language = new System.Collections.Generic.List<string>(__json0.Count); foreach(JSONNode __e0 in __json0.Children) { string __v0;  { if(!__e0.IsString) { throw new SerializationException(); }  __v0 = __e0; }  Language.Add(__v0); }   }
        PostInit();
    }

    public GlobalConfig(int id, System.Collections.Generic.List<string> Language ) 
    {
        this.Id = id;
        this.Language = Language;
        PostInit();
    }

    public static GlobalConfig DeserializeGlobalConfig(JSONNode _json)
    {
        return new global.GlobalConfig(_json);
    }

    /// <summary>
    /// 这是id
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 名字
    /// </summary>
    public System.Collections.Generic.List<string> Language { get; private set; }

    public const int __ID__ = -122115760;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Language:" + Bright.Common.StringUtil.CollectionToString(Language) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
