//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

/*
AvatarConfig.cs
Create By Ben
*/

using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;

namespace cfg.Player
{ 

public sealed partial class AvatarConfig :  Bright.Config.BeanBase 
{
    public AvatarConfig(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  Id = _json["id"]; }
        { if(!_json["name"].IsString) { throw new SerializationException(); }  Name = _json["name"]; }
        { if(!_json["type"].IsNumber) { throw new SerializationException(); }  Type = _json["type"]; }
        { if(!_json["icon"].IsString) { throw new SerializationException(); }  Icon = _json["icon"]; }
        { if(!_json["vip"].IsNumber) { throw new SerializationException(); }  Vip = _json["vip"]; }
        PostInit();
    }

    public AvatarConfig(int id, string name, int type, string icon, int vip ) 
    {
        this.Id = id;
        this.Name = name;
        this.Type = type;
        this.Icon = icon;
        this.Vip = vip;
        PostInit();
    }

    public static AvatarConfig DeserializeAvatarConfig(JSONNode _json)
    {
        return new Player.AvatarConfig(_json);
    }

    /// <summary>
    /// 这是id
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 名字(这里配置多语言id)
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 类型（0头像，1头像框）
    /// </summary>
    public int Type { get; private set; }
    /// <summary>
    /// 资源名
    /// </summary>
    public string Icon { get; private set; }
    /// <summary>
    /// vip解锁等级(默认0级解锁)
    /// </summary>
    public int Vip { get; private set; }

    public const int __ID__ = -53400600;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Name:" + Name + ","
        + "Type:" + Type + ","
        + "Icon:" + Icon + ","
        + "Vip:" + Vip + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
